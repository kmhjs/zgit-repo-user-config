#
# - Configuration tasks
#

#
# Initialize configuration file
#
# This method requires ${ZGITREPO_USER_CONFIG_FILE} configuration.
#
function _zgit-repo-user-config::configuration::init()
{
  if ! _zgit-repo-user-config::validation::is_exist_configuration_file
  then
    touch ${ZGITREPO_USER_CONFIG_FILE}
    echo "[INFO] Initialized ${ZGITREPO_USER_CONFIG_FILE}"
  fi
}

#
# Add configuration for current directory
#
# Given information will be used for configuration of git author information
# under current directory.
#
# @param user_name User name for git author information
# @param user_mail User e-mail address for git author information
#
function _zgit-repo-user-config::configuration::add()
{
  # Put user information
  vared -p 'Your name  >> ' -c user_name
  vared -p 'Your email >> ' -c user_mail

  if [[ -z "${user_name}" || -z "${user_mail}" ]]
  then
    echo "[ERROR] Username and mail address must be specified" 1>&2
    return 1
  fi

  # Write record
  echo '('                       >> ${ZGITREPO_USER_CONFIG_FILE}
  echo "  :path '$(pwd)'"        >> ${ZGITREPO_USER_CONFIG_FILE}
  echo "  :name '${user_name}'"  >> ${ZGITREPO_USER_CONFIG_FILE}
  echo "  :email '${user_mail}'" >> ${ZGITREPO_USER_CONFIG_FILE}
  echo ')'                       >> ${ZGITREPO_USER_CONFIG_FILE}

  # Show information
  echo "Configured as"
  echo "  Path:  $(pwd)"
  echo "  Name:  ${user_name}"
  echo "  Email: ${user_mail}"
}

#
# Apply configuration for current directory
#
# @param stored_path Root directory path for configuration
# @param user_name User name to be configured
# @param user_email User email address to be configured
#
function _zgit-repo-user-config::configuration::apply()
{
  local stored_path=$1
  local user_name=$2
  local user_email=$3

  if [[ -n ${stored_path} && -n ${user_name} && -n ${user_email} ]]
  then
    # Configure
    git config --local user.name ${user_name}
    git config --local user.email ${user_email}

    echo "This repository was configured by following settings"
    echo "  -> Base config path : ${stored_path}"
    echo "  -> User name        : ${user_name}"
    echo "  -> Mail address     : ${user_email}"
  fi
}

#
# Validate path and apply the configuration
#
# This function will be called by zcl
#
# @param stored_path Root directory path for configuration
# @param user_name User name to be configured
# @param user_email User email address to be configured
#
function _zgit-repo-user-config::configuration::configure()
{
  local stored_path=$1
  local user_name=$2
  local user_email=$3

  # HACK: To exit the zcl run, return 1 as exit code
  local -A exit_code=(success 1 failure 0)

  if [[ "$(pwd)" =~ "^${stored_path}.*$" ]]
  then
    _zgit-repo-user-config::configuration::apply ${stored_path} ${user_name} ${user_email}

    return ${exit_code[success]}
  fi

  return ${exit_code[failure]}
}

#
# - Validation tasks
#

#
# Validates zcl command is exist or not.
#
function _zgit-repo-user-config::validation::is_zcl_available()
{
  type zcl 1>/dev/null 2>/dev/null
}

#
# Validates current path is subdirectory of configured path or not
#
# This method requires ${ZGITREPO_USER_CONFIG_FILE} configuration.
#
function _zgit-repo-user-config::validation::is_configured_parent_directory()
{
  # Check path included or not
  #cat ${ZGITREPO_USER_CONFIG_FILE} | while read stored_path_config
  zcl ${ZGITREPO_USER_CONFIG_FILE} echo :path | while read stored_path
  do
    if [[ "$(pwd)" =~ "^${stored_path}.*$" ]]
    then
      echo "[ERROR] Registered path ${stored_path} includes current directory" 1>&2
      return 1
    fi

    if [[ "${stored_path}" =~ "^$(pwd).*$" ]]
    then
      echo "[ERROR] Child path ${stored_path} is already registered" 1>&2
      return 1
    fi
  done

  return 0
}

#
# Validates current directory is inside of repository or not
#
function _zgit-repo-user-config::validation::is_in_repository()
{
  git rev-parse --is-inside-work-tree 1>/dev/null 2>/dev/null
}

#
# Validates
#   - Configuration file name is not empty
#   - Configuration file is exist
#
function _zgit-repo-user-config::validation::is_exist_configuration_file()
{
  # Check configuration file
  [[ -n "${ZGITREPO_USER_CONFIG_FILE}" && -e ${ZGITREPO_USER_CONFIG_FILE} ]]
}

#
# Validates git author information has been configured or not
#
function _zgit-repo-user-config::validation::is_configured_author()
{
  [[ -z "$(git config --local user.name)" && -z "$(git config --local user.email)" ]]
}

#
# Validates configuration task run requirements were satisfied or not
#
# This task executes following validations
#   - is_in_repository
#   - is_exist_configuration_file
#   - is_configured_author
#
function _zgit-repo-user-config::validation::is_satisfied_requirements()
{
  local -a validators=(
    is_in_repository
    is_exist_configuration_file
    is_configured_author
  )

  local validator=''
  for validator (${validators})
  do
    if ! _zgit-repo-user-config::validation::${validator}
    then
      return 1
    fi
  done

  return 0
}

#
# - Subcommand / Option handlers
#

#
# Handles add new configuration task called by -a option
#
function _zgit-repo-user-config::command::add_new_configuration()
{
  if [[ -z "${ZGITREPO_USER_CONFIG_FILE}" ]]
  then
    echo "[ERROR] Variable ZGITREPO_USER_CONFIG_FILE not configured" 1>&2
    return 1
  fi

  _zgit-repo-user-config::configuration::init

  if ! _zgit-repo-user-config::validation::is_configured_parent_directory
  then
    return 1
  fi

  _zgit-repo-user-config::configuration::add

  return 0
}

#
# - Core task
#

#
# Main task
#
# This function executes validation and configuration handling tasks
#
# @param (optional) -a for add configuration for current directory
#
function _zgit-repo-user-config::main()
{
  local mode=$1

  # Check zcl command is exist or not.
  if ! _zgit-repo-user-config::validation::is_zcl_available
  then
    echo '[ERROR] zcl command required.' 1>&2
    return 1
  fi

  # If option -a is given, configure as new path
  if [[ ${mode} == '-a' ]]
  then
    _zgit-repo-user-config::command::add_new_configuration
    return $?
  fi

  if ! _zgit-repo-user-config::validation::is_satisfied_requirements
  then
    return 1
  fi

  # Setup
  zcl ${ZGITREPO_USER_CONFIG_FILE} _zgit-repo-user-config::configuration::configure :path :name :email
}

_zgit-repo-user-config::main $*
