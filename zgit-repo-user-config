function local::zgit-repo-user-config::configuration::init()
{
  if [[ ! -e ${ZGITREPO_USER_CONFIG_FILE} ]]
  then
    touch ${ZGITREPO_USER_CONFIG_FILE}
    echo "[INFO] Initialized ${ZGITREPO_USER_CONFIG_FILE}"
  fi
}

function local::zgit-repo-user-config::configuration::add()
{
  # Put user information
  vared -p 'Your name  >> ' -c user_name
  vared -p 'Your email >> ' -c user_mail

  if [[ -z "${user_name}" || -z "${user_mail}" ]]
  then
    echo "[ERROR] Username and mail address must be specified" 1>&2
    return 1
  fi

  # Write record
  echo "$(pwd)%${user_name}%${user_mail}" >> ${ZGITREPO_USER_CONFIG_FILE}

  # Show information
  echo "Configured as"
  echo "    Path:  $(pwd)"
  echo "    Name:  ${user_name}"
  echo "    Email: ${user_mail}"
}

function local::zgit-repo-user-config::configuration::setup_author_info()
{
  local found_path_config=$1

  if [[ -n "${found_path_config}" ]]
  then
    local info=(${(s:%:)found_path_config})
    local -A configs=()

    configs['stored_path']=${info[1]}
    configs['user_name']=${info[2]}
    configs['user_mail']=${info[3]}

    # Configure
    git config --local user.name "${configs['user_name']}"
    git config --local user.email "${configs['user_mail']}"

    echo "This repository was configured by following settings"
    echo "    -> Base config path : ${configs['stored_path']}"
    echo "    -> User name        : ${configs['user_name']}"
    echo "    -> Mail address     : ${configs['user_mail']}"
  fi
}

function local::zgit-repo-user-config::validation::include_path()
{
  # Check path included or not
  cat ${ZGITREPO_USER_CONFIG_FILE} | while read stored_path_config
  do
    local info=(${(s:%:)stored_path_config})
    local stored_path=${info[1]}

    if [[ "$(pwd)" =~ "^${stored_path}.*$" ]]
    then
      echo "[ERROR] Registered path ${stored_path} includes current directory" 1>&2
      return 1
    fi

    if [[ "${stored_path}" =~ "^$(pwd).*$" ]]
    then
      echo "[ERROR] Child path ${stored_path} is already registered" 1>&2
      return 1
    fi
  done

  return 0
}

function local::zgit-repo-user-config::validation::in_git_branch()
{
  [[ -n "$(git rev-parse --is-inside-work-tree 1>/dev/null 2>/dev/null)" ]]

  return $?
}

function local::zgit-repo-user-config::validation::configuration_file()
{
  # Check configuration file
  [[ -n "${ZGITREPO_USER_CONFIG_FILE}" && -e ${ZGITREPO_USER_CONFIG_FILE} ]]

  return $?
}

function local::zgit-repo-user-config::validation::git_configured_state()
{
  [[ -z "$(git config --local user.name)" && -z "$(git config --local user.email)" ]]

  return $?
}

function local::zgit-repo-user-config::search::proper_configuration()
{
  local found_path_config stored_path_config

  cat ${ZGITREPO_USER_CONFIG_FILE} | while read stored_path_config
  do
    local info=(${(s:%:)stored_path_config})
    if [[ "$(pwd)" =~ "^${info[1]}.*$" ]]
    then
      found_path_config=${stored_path_config}
      break
    fi
  done

  echo ${found_path_config}
}

function local::zgit-repo-user-config::main()
{
  # If option -a is given, configure as new path
  while getopts :a opt
  do
    case ${opt} in
      a)
        if [[ -z "${ZGITREPO_USER_CONFIG_FILE}" ]]
        then
          echo "[ERROR] Variable ZGITREPO_USER_CONFIG_FILE not configured" 1>&2
          return 1
        fi

        local::zgit-repo-user-config::configuration::init

        if ! local::zgit-repo-user-config::validation::include_path
        then
          return 1
        fi

        local::zgit-repo-user-config::configuration::add

        return 0

        ;;
    esac
  done


  # Check
  #   * current directory is under git repo or not
  #   * configuration file
  #   * local user is configured or not
  local validators=(in_git_branch configuration_file git_configured_state)
  local validator=''
  for validator (${validators})
  do
    if ! local::zgit-repo-user-config::validation::${validator}
    then
      return 1
    fi
  done

  # Search configuration for top directory
  local found_path_config=$(local::zgit-repo-user-config::search::proper_configuration)

  # Setup
  local::zgit-repo-user-config::configuration::setup_author_info ${found_path_config}
}

local::zgit-repo-user-config::main $*
